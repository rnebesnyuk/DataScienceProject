"""parking edir

Revision ID: 41e9fa337909
Revises: b77bce51625c
Create Date: 2024-08-25 18:29:37.632400

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '41e9fa337909'
down_revision: Union[str, None] = 'b77bce51625c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('parking_lot', sa.Column('vehicle_id', sa.UUID(), nullable=False))
    op.add_column('parking_lot', sa.Column('entry_time', sa.DateTime(), nullable=False))
    op.create_foreign_key(None, 'parking_lot', 'vehicles', ['vehicle_id'], ['id'])
    op.drop_column('parking_lot', 'available_spaces')
    op.drop_column('parking_lot', 'created_at')
    op.drop_column('parking_lot', 'total_spaces')
    op.drop_column('parking_lot', 'updated_at')
    op.alter_column('parking_records', 'exit_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('parking_records', 'duration',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('parking_records', 'cost',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.drop_index('ix_parking_records_license_plate', table_name='parking_records')
    op.drop_column('parking_records', 'license_plate')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('parking_records', sa.Column('license_plate', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.create_index('ix_parking_records_license_plate', 'parking_records', ['license_plate'], unique=True)
    op.alter_column('parking_records', 'cost',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('parking_records', 'duration',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('parking_records', 'exit_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('parking_lot', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('parking_lot', sa.Column('total_spaces', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('parking_lot', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('parking_lot', sa.Column('available_spaces', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'parking_lot', type_='foreignkey')
    op.drop_column('parking_lot', 'entry_time')
    op.drop_column('parking_lot', 'vehicle_id')
    # ### end Alembic commands ###
